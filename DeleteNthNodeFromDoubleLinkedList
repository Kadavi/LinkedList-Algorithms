public class DeleteNthNodeFromDoubleLinkedList {

    static class Node {
        int item;
        Node last;
        Node next;
        Node(int item) {
            this.item = item;
        }
        
        @Override
        public String toString() {
            String str = "";
            Node iterator = this;
            
            while (iterator != null) {
                str += iterator.item;
                
                if (iterator.next != null) {
                    iterator = iterator.next;
                } else {
                    break;
                }
            }
            
            return str;
        }
    }
    
    static Node deleteEachNthNode(Node head, int nth) {
        Node previous, current = head, forward;
        
        int counter = 1;
        
        while (current != null) {
            previous = current.last;
            forward = current.next;
            
            if (counter % nth == 0) {
                
                if (current.next != null) {
                    current.last.next = forward;
                    current.next.last = previous;
                } else {
                    current.last.next = null;
                }
            }
            
            counter++; 
            current = forward;
        }
        
        return head;
    }
    
    public static void main(String[] args) {
        Node a = new Node(1);
        Node b = new Node(2);
        Node c = new Node(3);
        Node d = new Node(4);
        Node e = new Node(5);
        Node f = new Node(6);
        Node g = new Node(7);
        Node h = new Node(8);
        Node i = new Node(9);
        Node j = new Node(10);
        
        a.next = b; b.last = a; b.next = c; c.last = b; c.next = d; 
        d.last = c; d.next = e; e.last = d; e.next = f; f.last = e; 
        f.next = g; g.last = f; g.next = h; h.last = g; h.next = i; 
        i.last = h; i.next = j; j.last = i;
        
        System.out.println(a);
        
        System.out.println(deleteEachNthNode(a, 3));
        
    }
}
